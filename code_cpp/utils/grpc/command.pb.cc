// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

#include "command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace terminal {
constexpr ComandoRequest::ComandoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : argumentos_()
  , comando_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ComandoRequestDefaultTypeInternal {
  constexpr ComandoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ComandoRequestDefaultTypeInternal() {}
  union {
    ComandoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ComandoRequestDefaultTypeInternal _ComandoRequest_default_instance_;
constexpr ComandoResponse::ComandoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : saida_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , erro_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , codigo_saida_(0){}
struct ComandoResponseDefaultTypeInternal {
  constexpr ComandoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ComandoResponseDefaultTypeInternal() {}
  union {
    ComandoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ComandoResponseDefaultTypeInternal _ComandoResponse_default_instance_;
}  // namespace terminal
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_command_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_command_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_command_2eproto = nullptr;

const uint32_t TableStruct_command_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::terminal::ComandoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::terminal::ComandoRequest, comando_),
  PROTOBUF_FIELD_OFFSET(::terminal::ComandoRequest, argumentos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::terminal::ComandoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::terminal::ComandoResponse, saida_),
  PROTOBUF_FIELD_OFFSET(::terminal::ComandoResponse, erro_),
  PROTOBUF_FIELD_OFFSET(::terminal::ComandoResponse, codigo_saida_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::terminal::ComandoRequest)},
  { 8, -1, -1, sizeof(::terminal::ComandoResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::terminal::_ComandoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::terminal::_ComandoResponse_default_instance_),
};

const char descriptor_table_protodef_command_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rcommand.proto\022\010terminal\"5\n\016ComandoRequ"
  "est\022\017\n\007comando\030\001 \001(\t\022\022\n\nargumentos\030\002 \003(\t"
  "\"D\n\017ComandoResponse\022\r\n\005saida\030\001 \001(\t\022\014\n\004er"
  "ro\030\002 \001(\t\022\024\n\014codigo_saida\030\003 \001(\0052Y\n\017Termin"
  "alService\022F\n\017ExecutarComando\022\030.terminal."
  "ComandoRequest\032\031.terminal.ComandoRespons"
  "eb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_command_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_command_2eproto = {
  false, false, 249, descriptor_table_protodef_command_2eproto, "command.proto", 
  &descriptor_table_command_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_command_2eproto::offsets,
  file_level_metadata_command_2eproto, file_level_enum_descriptors_command_2eproto, file_level_service_descriptors_command_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_command_2eproto_getter() {
  return &descriptor_table_command_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_command_2eproto(&descriptor_table_command_2eproto);
namespace terminal {

// ===================================================================

class ComandoRequest::_Internal {
 public:
};

ComandoRequest::ComandoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  argumentos_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:terminal.ComandoRequest)
}
ComandoRequest::ComandoRequest(const ComandoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      argumentos_(from.argumentos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  comando_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    comando_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comando().empty()) {
    comando_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comando(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:terminal.ComandoRequest)
}

inline void ComandoRequest::SharedCtor() {
comando_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  comando_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComandoRequest::~ComandoRequest() {
  // @@protoc_insertion_point(destructor:terminal.ComandoRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ComandoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  comando_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ComandoRequest::ArenaDtor(void* object) {
  ComandoRequest* _this = reinterpret_cast< ComandoRequest* >(object);
  (void)_this;
}
void ComandoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComandoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ComandoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:terminal.ComandoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  argumentos_.Clear();
  comando_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComandoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string comando = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_comando();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "terminal.ComandoRequest.comando"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string argumentos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_argumentos();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "terminal.ComandoRequest.argumentos"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComandoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:terminal.ComandoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string comando = 1;
  if (!this->_internal_comando().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comando().data(), static_cast<int>(this->_internal_comando().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "terminal.ComandoRequest.comando");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_comando(), target);
  }

  // repeated string argumentos = 2;
  for (int i = 0, n = this->_internal_argumentos_size(); i < n; i++) {
    const auto& s = this->_internal_argumentos(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "terminal.ComandoRequest.argumentos");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:terminal.ComandoRequest)
  return target;
}

size_t ComandoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:terminal.ComandoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string argumentos = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(argumentos_.size());
  for (int i = 0, n = argumentos_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      argumentos_.Get(i));
  }

  // string comando = 1;
  if (!this->_internal_comando().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comando());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComandoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ComandoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComandoRequest::GetClassData() const { return &_class_data_; }

void ComandoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ComandoRequest *>(to)->MergeFrom(
      static_cast<const ComandoRequest &>(from));
}


void ComandoRequest::MergeFrom(const ComandoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:terminal.ComandoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  argumentos_.MergeFrom(from.argumentos_);
  if (!from._internal_comando().empty()) {
    _internal_set_comando(from._internal_comando());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComandoRequest::CopyFrom(const ComandoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:terminal.ComandoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComandoRequest::IsInitialized() const {
  return true;
}

void ComandoRequest::InternalSwap(ComandoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  argumentos_.InternalSwap(&other->argumentos_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comando_, lhs_arena,
      &other->comando_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ComandoRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_command_2eproto_getter, &descriptor_table_command_2eproto_once,
      file_level_metadata_command_2eproto[0]);
}

// ===================================================================

class ComandoResponse::_Internal {
 public:
};

ComandoResponse::ComandoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:terminal.ComandoResponse)
}
ComandoResponse::ComandoResponse(const ComandoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  saida_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    saida_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_saida().empty()) {
    saida_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_saida(), 
      GetArenaForAllocation());
  }
  erro_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    erro_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_erro().empty()) {
    erro_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_erro(), 
      GetArenaForAllocation());
  }
  codigo_saida_ = from.codigo_saida_;
  // @@protoc_insertion_point(copy_constructor:terminal.ComandoResponse)
}

inline void ComandoResponse::SharedCtor() {
saida_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  saida_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
erro_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  erro_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
codigo_saida_ = 0;
}

ComandoResponse::~ComandoResponse() {
  // @@protoc_insertion_point(destructor:terminal.ComandoResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ComandoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  saida_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  erro_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ComandoResponse::ArenaDtor(void* object) {
  ComandoResponse* _this = reinterpret_cast< ComandoResponse* >(object);
  (void)_this;
}
void ComandoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComandoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ComandoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:terminal.ComandoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  saida_.ClearToEmpty();
  erro_.ClearToEmpty();
  codigo_saida_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComandoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string saida = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_saida();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "terminal.ComandoResponse.saida"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string erro = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_erro();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "terminal.ComandoResponse.erro"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 codigo_saida = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          codigo_saida_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComandoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:terminal.ComandoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string saida = 1;
  if (!this->_internal_saida().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_saida().data(), static_cast<int>(this->_internal_saida().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "terminal.ComandoResponse.saida");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_saida(), target);
  }

  // string erro = 2;
  if (!this->_internal_erro().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_erro().data(), static_cast<int>(this->_internal_erro().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "terminal.ComandoResponse.erro");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_erro(), target);
  }

  // int32 codigo_saida = 3;
  if (this->_internal_codigo_saida() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_codigo_saida(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:terminal.ComandoResponse)
  return target;
}

size_t ComandoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:terminal.ComandoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string saida = 1;
  if (!this->_internal_saida().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_saida());
  }

  // string erro = 2;
  if (!this->_internal_erro().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_erro());
  }

  // int32 codigo_saida = 3;
  if (this->_internal_codigo_saida() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_codigo_saida());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComandoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ComandoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComandoResponse::GetClassData() const { return &_class_data_; }

void ComandoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ComandoResponse *>(to)->MergeFrom(
      static_cast<const ComandoResponse &>(from));
}


void ComandoResponse::MergeFrom(const ComandoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:terminal.ComandoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_saida().empty()) {
    _internal_set_saida(from._internal_saida());
  }
  if (!from._internal_erro().empty()) {
    _internal_set_erro(from._internal_erro());
  }
  if (from._internal_codigo_saida() != 0) {
    _internal_set_codigo_saida(from._internal_codigo_saida());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComandoResponse::CopyFrom(const ComandoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:terminal.ComandoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComandoResponse::IsInitialized() const {
  return true;
}

void ComandoResponse::InternalSwap(ComandoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &saida_, lhs_arena,
      &other->saida_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &erro_, lhs_arena,
      &other->erro_, rhs_arena
  );
  swap(codigo_saida_, other->codigo_saida_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComandoResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_command_2eproto_getter, &descriptor_table_command_2eproto_once,
      file_level_metadata_command_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace terminal
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::terminal::ComandoRequest* Arena::CreateMaybeMessage< ::terminal::ComandoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::terminal::ComandoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::terminal::ComandoResponse* Arena::CreateMaybeMessage< ::terminal::ComandoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::terminal::ComandoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
